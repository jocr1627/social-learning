input CreateUserInput {
  name: String!
  password: String!
}

input LoginInput {
  name: String!
  password: String!
}

interface Node {
  id: ID!
}

type CreateUserPayload {
  user: User!
}

type LoginPayload {
  user: User
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload
  login(input: LoginInput!): LoginPayload
}

type Query {
  node(id: ID!): Node
  viewer: Viewer!
}

type User implements Node {
  id: ID!
  name: String!
}

type Viewer {
  user: User
  id: ID!
}
